event_clearance_group %>% c('`TRAFFIC RELATED CALLS`')
ggplot(aes('`district_sector`', fill='event_clearance_group')) +geom_bar()
ggplot(aes('district_sector', fill='event_clearance_group')) +geom_bar()
police%>%
filter(
district_sector %>% c ('B','C') &
event_clearance_group %>% c('`TRAFFIC RELATED CALLS`')
ggplot(aes('district_sector', fill='event_clearance_group')) +geom_bar()
police %>% ggplot() + geom_bar(aes(event_clearance_group))
police %>% ggplot() + geom_bar(aes('TRAFFIC RELATED CALLS'))
police %>% ggplot() + geom_bar(aes('district_sector'))
police %>% ggplot(district_sector) + geom_bar(aes())
police %>% ggplot('district_sector') + geom_bar(aes())
district_sector %>% c ('B','C') &
event_clearance_group %>% c('`TRAFFIC RELATED CALLS`', 'FRAUD CALLS')
police%>%
filter(
district_sector %>% c ('B','C') &
event_clearance_group %>% c('`TRAFFIC RELATED CALLS`', 'FRAUD CALLS')
police %>% ggplot('event_clearance_group') + geom_bar(aes())
police%>%
filter(
district_sector %>% c ('B','C') &
event_clearance_group %>% c('`TRAFFIC RELATED CALLS`', 'FRAUD CALLS')
police %>% ggplot('event_clearance_group') + geom_bar(aes())
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K') &
event_clearance_group %in% c('TRAFFIC RELATED CALLS', 'FRAUD CALLS', 'BURGLARY', 'BIKE')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R', 'O', 'C', 'K') &
event_clearance_group %in% c('TRAFFIC RELATED CALLS', 'FRAUD CALLS')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('TRAFFIC RELATED CALLS', 'FRAUD CALLS')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
View(police)
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING', 'AUTO_THEFT')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING','AUTO THEFT')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING','`AUTO THEFT`')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police <- read.csv('https://goo.gl/nNAuDy')
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police <- read.csv('https://goo.gl/nNAuDy')
summary(police)
install.packages('ggplot2')
library(ggplot2)
install.packages('tidyverse')
library(tidyverse)
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
labs(title('Burglary and Shoplifting by District'))
labs(title("Burglary and Shoplifting by District"))
View(police)
summary('BURGLARY','SHOPLIFTING')
summary('burglary')
summary('event_clearance_group')
knitr::opts_chunk$set(echo = TRUE)
```{r 'BURGLARY', 'SHOPLIFTING'}
summary('event_clearance_group')
police$event_clearance_subgroup %>% table() %>% c() %>%
police$event_clearance_group %>% table() %>% c() %>%
police %>% table(event_clearance_group) %>%
police %>% table(event_clearance_group) %>%
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
police %>%
filter(
district_sector %in% c('B', 'E', 'D', 'R') &
event_clearance_group %in% c('BURGLARY', 'SHOPLIFTING')
) %>%
ggplot(aes(district_sector, fill = event_clearance_group)) + geom_bar()
summary(police)
police %>%
group_by(event_clearance_group, event_clearance_subgroup) %>%
summarise(incidence = n()) %>%
filter(event_clearance_group %in% 'BURGLARY', 'SHOPLIFTING')
police %>%
group_by(event_clearance_group, event_clearance_subgroup) %>%
summarise(incidence = n()) %>%
police %>%
group_by(event_clearance_group, event_clearance_subgroup) %>%
summarise(incidence = n()) %>%
filter(event_clearance_group %in% 'BURGLARY')
View(police)
police %>%
group_by(event_clearance_group) %>%
police %>%
group_by(event_clearance_group) %>%
write_csv('tidyverse_exercise_output.csv')
install.packages('devtools')
police$event_clearance_group %>% summary()
filter('burglary','shoplifting')
police %>% select(event_clearance_group, district_sector)
police$event_clearance_group %>% summary()
filter('burglary','shoplifting')
police %>% select(event_clearance_group, district_sector)
police %>%
mutate(
burglary = ifelse(event_clearance_group %in% 'BURGLARY', 1, 0)
) %>%
select(event_clearance_group, burglary) %>%
summary('burglary')
```{r 'event_clearance_group'}
install.packages(c('rmarkdown','knitr'))
install.packages(c("rmarkdown", "knitr"))
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by('DISTRICT_SECTOR') %>%
summarise()
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by() %>%
summarise()
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
summarise()
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
select(event_clearance_group,district_sector,incident_location)
View(police)
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
select(event_clearance_group,district_sector, hundred_block_location)
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
filter(district_sector %in% c('B','E', 'D','R'))
group_by(event_clearance_group) %>%
select(event_clearance_group,district_sector, hundred_block_location)
head()
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
filter(district_sector %in% c('B','E', 'D','R')) %>%
group_by(event_clearance_group) %>%
select(event_clearance_group,district_sector, hundred_block_location)
head()
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
select(event_clearance_group,district_sector, hundred_block_location)
head()
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
select(event_clearance_group,district_sector, hundred_block_location)
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
table(event_clearace_group,district_sector)
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
table(event_clearance_group,district_sector)
police %>%
filter(event_clearance_group %in% c('BURGLARY','SHOPLIFTING')) %>%
group_by(event_clearance_group) %>%
filter(district_sector %in% c('B','D','E','R'))
table(event_clearance_group,district_sector)
install.packages('tidyverse')
library(tidyverse)
install.packages("tidyverse")
install.packages(c('rmarkdown','knitr'))
install.packages(c("rmarkdown", "knitr"))
kable(event_clearance_group)
1+1
1+1
```{r, echo=FALSE}
1+1
plot(cars)
x=c(1,2,3,4)
x=c(1,2,3,4)
x
link='https://raw.githubusercontent.com/EvansDataScience/data/master/allIndexes.csv'
indexes=read.csv(link,stringsAsFactors = F)
names(indexes)
View(indexes)
summary(indexes)
str(indexes, width=50, strict.width='cut')
str(indexes, width=50, strict.width='cut')
table(indexes$presscat)
str(indexes, width=50, strict.width='cut')
table(indexes$presscat)
str(indexes, width=50, strict.width='cut')
summary(indexes)
str(indexes,width=70,strict.width='cut')
table(indexes$presscat)
table(indexes$environmentCat)
hist(indexes$environment)
explanans=names(indexes)[c(3:5)]
for (x in explanans){
p=cor.test(indexes[,x],indexes$environment)
if(p$p.value<0.05){
messageYES=paste('environment index is correlated with',x)
print(messageYES)
}else{
messageNO=paste('environment index is NOT correlated with',x)
print(messageNO)
}
}
cor(indexes[explanans])
LinRegEPI = lm(environment ~ corruptionIndex + scoreEconomy + scorepress, data = indexes)
summary(LinRegEPI)
summary(LinRegEPI)$adj.r.squared # from 0 to 1, the closer to 1 the better.
# normality of residuals?
library(car)
# normality of residuals?
install.packages("car")
# collinearity?
vif(LinRegEPI) > 4 # problem if some are TRUE
# Heteroskedastic?
ncvTest(LinRegEPI)$p<0.05
# normality of residuals?
install.packages("car")
library(car)
qqPlot(LinRegEPI, main="QQ Plot")
influencePlot(LinRegEPI,
id.method="noteworthy",
id.n=2,
main="Identifying outliers",
sub="Circle size is proportial to Cook's Distance")
library(MASS)
LinRegEPI_R = rlm(environment ~ corruptionIndex + scoreEconomy + scorepress,
data = indexes)
summary(LinRegEPI_R)
outCases=c(40,64,127)
indexes[outCases,]
LinRegEPI_OUT = lm(environment ~ corruptionIndex + scoreEconomy + scorepress, data = indexes[-outCases,])
summary(LinRegEPI_OUT)
# The function 'relevel' CAN NOT accept ordinals.
# This is why I did not set it as ordinal before.
# This variable has 3 levels. Let's choose '1' as the reference.
indexes$presscat=as.factor(indexes$presscat)
indexes$presscat <- relevel(indexes$presscat, ref = 1)
LinRegEPI_catX <- lm(environment ~ corruptionIndex + scoreEconomy + presscat,data = indexes)
summary(LinRegEPI_catX)
barplot(table(indexes$environmentCat))
# function 'glm' !
LogitEPI_a = glm(environmentCat ~ corruptionIndex + scoreEconomy,
data = indexes,
family = binomial())
# see full results:
summary(LogitEPI_a)
# remember that presscat is factor
LogitEPI_b =glm(environmentCat ~ corruptionIndex + scoreEconomy + presscat,
data = indexes,
family = binomial())
summary(LogitEPI_b)
if (LogitEPI_a$aic < LogitEPI_b$aic){
print("model 'a' is better")
}else{print("model 'b' is better")}
#getting coefficients
coeffsa=coef(summary(LogitEPI_a))
coeffsb=coef(summary(LogitEPI_b))
#getting coefficients
coeffsa=coef(summary(LogitEPI_a))
coeffsb=coef(summary(LogitEPI_b))
data.frame(CoefficientExp=exp(coeffsa[,1]),Significant=coeffsa[,4]<0.05)
library(margins)
install.packages("margins")
library(margins)
margins_LogitEPI_a = margins(LogitEPI_a)
marginalSummary=summary(margins_LogitEPI_a)
# just to see the results better:
data.frame(coeff=round(marginalSummary$AME,3),
lower=round(marginalSummary$lower,3),
upper=round(marginalSummary$upper,3),
sig=marginalSummary$p<0.05)
plot(margins_LogitEPI_a)
actualValues=indexes$environmentCat
predictedValues=predict(LogitEPI_a, type = 'response')
install.packages("InformationValue")
library(InformationValue)
cm=confusionMatrix(actualValues, predictedValues)
# adding names to cm
row.names(cm)=c('PredictedNegative','PredictedPositive')
colnames(cm)=c('ActualNegative','ActualPositive')
# then:
cm
31/129
misClassError(actualValues, predictedValues)
plotROC(actualValues, predictedValues)
install.packages('ggplot'
)
install.packages('ggplot2'
)
View(police)
ggplot(police, x=general_offense_number,
geom_bar())
ggplot2(police, x=general_offense_number,
geom_bar())
ggplot2(police, aes(x=general_offense_number),
geom_bar())
ggplot(police, aes(x=general_offense_number),
geom_bar())
install.packages('ggplot2'
)
install.packages('ggplot')
library(tidyverse)
eruption.lm=Linreg
ncvTest(Linreg)$p<0.05
Linreg=lm(opinion_leaders ~ perc_women + age + hhincome + gender + educ + race + employment + party, data=womendata)
library(tidyverse)
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
library(pander)
install.packages('tidyverse')
library(tidyverse)
library(pander)
install.packages("tidyverse")
install.packages('tidyverse')
library(tidyverse)
library(pander)
install.packages('tidyverse')
install.packages('pander')
install.packages("tidyverse")
install.packages('tidyverse')
install.packages('pander')
install.packages('ggplot2')
library(tidyverse)
library(pander)
library(ggplot2)
plot(womendata$perc_women,womendata$age)
link='https://github.com/lmchu1/WomenLeaders599/raw/master/preprocessed_data.csv'
womendata=read.csv(link,stringsAsFactors = F)
names(womendata)
plot(womendata$perc_women,womendata$age)
(summary(womendata))
hist(womendata$perc_women,
xlab= 'Percentage of Female elected representatives' , ylab='Number of Survey Respondents',
main='Female Representatives among survey respondents',
col='coral1'
)
ggplot(womendata, aes(opinion_leaders))+
geom_bar(fill='steelblue') + theme_classic() +
xlab('Opinion about Political Leaders') + ylab('Frequency') + ggtitle('Distribution of Opinions about Leaders')
Linreg=lm(opinion_leaders ~ perc_women + age + hhincome + gender + educ + race + employment + party, data=womendata)
summary(Linreg)
vif(Linreg) > 3
ncvTest(Linreg)$p<0.05
install.packages('car')
vif(Linreg) > 3
install.packages('car')
library('car')
vif(Linreg) > 3
ncvTest(Linreg)$p<0.05
eruption.lm=Linreg
eruption.lm=Linreg
eruption,res = resid(eurption.lm)
eruption.lm=Linreg
eruption.res = resid(eruption.lm)
View(Linreg)
View(womendata)
womandata.lm=Linreg
womandata.res = resid(opinion_leaders.lm)
womandata.lm=Linreg
womandata.res = resid(womandata.lm)
plot(opinion_leaders$perc_women,opinion_leaders.res,
+  ylab= "Residuals", xlab="perc_women",
womandata.lm=Linreg
womandata.res = resid(womandata.lm)
plot(opinion_leaders$perc_women,womandata.res,
+  ylab= "Residuals", xlab="perc_women",
womandata.lm=Linreg
womandata.res = resid(womandata.lm)
plot(opinion_leaders$perc_women,  womandata.res,
+  ylab= "Residuals", xlab="perc_women",
womandata.lm=Linreg
womandata.res = resid(womandata.lm)
plot(opinion_leaders$perc_women,  womandata.res)
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot(opinion_leaders$perc_women,  womendata.res)
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot(age$perc_women,  womendata.res)
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot(womendata$perc_women,  womendata.res)
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot($perc_women,  womendata.res + ylab="Residuals", xlab="opinion_leaders", + main="Residual Plot")
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot(opinion_leaders$perc_women,  womendata.res + ylab="Residuals", xlab="opinion_leaders", + main="Residual Plot")
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot(opinion_leaders$perc_women,  womendata.res) + ylab("Residuals"), xlab("opinion_leaders") + main("Residual Plot")
womendata.lm=Linreg
womendata.res = resid(womendata.lm)
plot(opinion_leaders$perc_women,  womendata.res) + ylab("Residuals") + xlab("opinion_leaders") + main("Residual Plot")
womendata.lm=lm(opinion_lwSWEA)
womendata.lm=lm(opinion_leaders~perc_women, data=womendata)
womendata.res = resid(womendata.lm)
plot(womendata$perc_women,  womendata.res) + ylab("Residuals") + xlab("opinion_leaders") + main("Residual Plot")
#Please install the following packages if have not done so previously:
#install.packages('tidyverse')
#install.packages('pander')
#install.packages('ggplot2')
#install.packages('car')
#install.packages('oglmx')
library(tidyverse)
library(pander)
library(ggplot2)
library(car)
library(oglmx)
link='https://github.com/lmchu1/WomenLeaders599/raw/master/preprocessed_data.csv'
womendata<-read.csv(link,stringsAsFactors = F)
pander(names(womendata))
pander(summary(womendata))
hist(womendata$perc_women,
xlab= 'Percentage of Female elected representatives' , ylab='Number of Survey Respondents',
main='Female Representatives among survey respondents',
col='coral1'
)
ggplot(womendata, aes(opinion_leaders))+
geom_bar(fill='steelblue') + theme_classic() +
xlab('Opinion about Political Leaders') + ylab('Frequency') + ggtitle('Distribution of Opinions about Leaders')
Linreg=lm(opinion_leaders ~ perc_women + age + hhincome + gender + educ + race + employment + party, data=womendata)
womendata.lm=lm(opinion_leaders~perc_women, data=womendata)
qqPlot(womendata.lm, main="QQ Plot")
pander(summary(Linreg))
results.oprob<-oglmx(opinion_leaders ~ perc_women + educ + age + gender + hhincome + employment + party, data=womendata, link="probit",
constantMEAN = FALSE, constantSD = FALSE,
delta=0,threshparam = NULL)
summary(results.oprob)
margins.oglmx(results.oprob,ascontinuous = TRUE)
results.oprobhet<-oglmx(opinion_leaders ~ perc_women + educ + age + gender + hhincome + employment + party, data=womendata,constantMEAN= FALSE, constantSD= FALSE,threshparam=NULL)
summary(results.oprobhet)
results.oprobhet<-oglmx(opinion_leaders ~ perc_women + educ + age + gender + hhincome + employment + party, data=womendata,constantMEAN= FALSE, constantSD= FALSE,threshparam=NULL)
summary(results.oprobhet$Hetero)
pander(vif(Linreg) > 3 )
#Please install the following packages if have not done so previously:
#install.packages('tidyverse')
#install.packages('pander')
#install.packages('ggplot2')
#install.packages('car')
#install.packages('oglmx')
library(tidyverse)
library(pander)
library(ggplot2)
library(car)
library(oglmx)
link='https://github.com/lmchu1/WomenLeaders599/raw/master/preprocessed_data.csv'
womendata<-read.csv(link,stringsAsFactors = F)
pander(names(womendata))
pander(summary(womendata))
hist(womendata$perc_women,
xlab= 'Percentage of Female elected representatives' , ylab='Number of Survey Respondents',
main='Female Representatives among survey respondents',
col='coral1'
)
ggplot(womendata, aes(opinion_leaders))+
geom_bar(fill='steelblue') + theme_classic() +
xlab('Opinion about Political Leaders') + ylab('Frequency') + ggtitle('Distribution of Opinions about Leaders')
Linreg=lm(opinion_leaders ~ perc_women + age + hhincome + gender + educ + race + employment + party, data=womendata)
womendata.lm=lm(opinion_leaders~perc_women, data=womendata)
qqPlot(womendata.lm, main="QQ Plot")
pander(summary(Linreg))
results.oprob<-oglmx(opinion_leaders ~ perc_women + educ + age + gender + hhincome + employment + party, data=womendata, link="probit",
constantMEAN = FALSE, constantSD = FALSE,
delta=0,threshparam = NULL)
summary(results.oprob)
margins.oglmx(results.oprob,ascontinuous = TRUE)
results.oprobhet<-oglmx(opinion_leaders ~ perc_women + educ + age + gender + hhincome + employment + party, data=womendata,constantMEAN= FALSE, constantSD= FALSE,threshparam=NULL)
summary(results.oprobhet)
results.oprobhet<-oglmx(opinion_leaders ~ perc_women + educ + age + gender + hhincome + employment + party, data=womendata,constantMEAN= FALSE, constantSD= FALSE,threshparam=NULL)
summary(results.oprobhet$Hetero)
pander(vif(Linreg) > 3 )
